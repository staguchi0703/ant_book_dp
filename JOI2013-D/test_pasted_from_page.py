#
from resolve import resolve
####################################
####################################
# 以下にプラグインの内容をペーストする
#  
import sys
from io import StringIO
import unittest


class TestClass(unittest.TestCase):
    def assertIO(self, input, output):
        stdout, stdin = sys.stdout, sys.stdin
        sys.stdout, sys.stdin = StringIO(), StringIO(input)
        resolve()
        sys.stdout.seek(0)
        out = sys.stdout.read()[:-1]
        sys.stdout, sys.stdin = stdout, stdin
        print('------------')
        print(out)
        print('------------')
        self.assertEqual(out, output)

    def test_入力例_3(self):
        input = """195 200
42
42
46
45
8
33
10
30
5
52
17
47
60
0
56
41
27
40
40
53
45
36
52
55
26
31
35
43
19
42
16
7
44
49
28
21
13
1
30
6
26
48
41
28
25
30
6
38
0
0
27
35
37
44
59
4
49
1
27
20
6
35
12
54
3
6
33
46
60
48
13
44
27
17
34
17
48
48
34
51
58
60
34
31
22
27
1
14
1
56
21
17
31
55
9
15
19
28
13
54
10
15
8
55
4
44
25
1
20
21
23
43
51
42
58
33
39
49
29
13
43
32
18
32
9
13
5
40
58
55
57
18
13
42
33
9
10
9
43
26
21
15
23
4
59
32
5
57
32
47
13
25
41
4
58
59
43
37
34
14
43
33
51
48
53
14
55
13
33
3
41
6
50
30
7
60
41
18
3
24
51
39
0
52
50
0
23
36
52
15
24
18
21
6
32
3 11 72
9 24 52
4 34 6
5 47 72
23 48 68
45 47 90
21 29 89
26 55 28
42 60 74
9 11 23
16 18 69
52 53 32
19 55 2
5 42 75
18 50 37
7 58 24
16 45 20
3 20 75
9 21 15
20 36 10
17 20 34
31 59 86
24 46 82
15 43 64
13 14 94
13 36 64
35 55 86
24 33 61
22 54 69
2 48 24
38 48 88
6 23 34
29 37 49
20 26 52
11 28 25
26 51 13
26 51 32
32 54 79
34 53 83
43 53 65
43 49 60
42 59 49
23 42 11
15 55 46
25 45 65
35 45 40
9 37 7
0 50 39
18 49 9
8 24 41
24 50 53
24 39 26
49 49 21
34 40 62
19 30 94
33 45 57
1 43 23
6 42 8
55 59 92
20 39 92
32 34 39
11 33 48
17 37 5
5 14 9
8 41 97
3 55 100
43 60 45
39 43 60
32 45 80
23 49 39
9 12 21
43 48 71
44 45 33
30 38 60
4 6 55
22 39 90
20 59 53
26 36 99
11 14 21
25 59 7
25 38 53
21 25 28
40 58 35
34 58 62
7 31 1
22 26 51
41 49 47
21 53 86
16 46 96
20 40 24
8 18 87
19 51 57
13 54 57
19 60 73
34 49 74
47 53 42
42 47 69
21 31 39
8 32 64
11 26 86
31 34 19
3 50 19
10 14 79
47 50 89
53 58 6
23 34 82
19 46 82
29 44 38
23 38 14
26 60 93
14 45 53
7 8 73
34 36 42
42 53 9
12 28 40
3 12 64
41 49 94
3 34 54
3 3 17
0 48 28
2 57 29
3 16 38
13 21 95
13 47 50
3 18 78
9 25 39
38 56 49
33 56 56
14 36 67
10 39 93
10 22 92
12 54 66
20 20 17
0 48 4
22 40 4
41 50 97
48 50 24
37 50 2
59 59 44
30 56 70
1 40 40
19 48 91
9 27 13
1 56 46
9 60 20
2 58 71
40 49 84
31 33 69
10 47 13
37 57 7
20 57 83
17 18 49
33 54 79
14 53 88
5 45 73
18 31 61
9 57 36
19 43 43
44 44 27
9 28 94
40 60 17
3 54 4
25 60 41
42 46 3
16 53 28
0 34 71
21 37 42
28 30 21
1 38 20
35 38 29
36 40 40
34 37 13
10 43 11
8 52 49
24 42 27
0 12 69
41 44 92
40 44 53
17 33 36
6 54 25
35 36 16
12 32 41
34 59 36
31 45 29
49 52 90
10 22 1
2 49 45
18 44 24
25 31 97
16 24 97
30 56 66
4 36 48
23 33 21
30 40 65
15 19 43
7 7 60
4 38 78
16 24 11
21 29 65
45 50 46"""
        output = """18586"""
        self.assertIO(input, output)

    def test_入力例_1(self):
        input = """3 4
31
27
35
20 25 30
23 29 90
21 35 60
28 33 40"""
        output = """80"""
        self.assertIO(input, output)

    def test_入力例_2(self):
        input = """5 2
26
28
32
29
34
30 35 0
25 30 100"""
        output = """300"""
        self.assertIO(input, output)


if __name__ == "__main__":
    unittest.main()

